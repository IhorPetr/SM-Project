version: "3.4"

services:
  zookeeper:
    image: bitnami/zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    container_name: zookeeper
  kafka:
    image: bitnami/kafka
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    container_name: kafka
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    restart: always
    environment:
        - MONGO_INITDB_ROOT_USERNAME=root
        - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - "mongodb_data:/data/db"
  mongo-express:
    image: mongo-express
    container_name: mexpress
    ports:
      - "8091:8081"
    restart: always
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://root:password@mongo:27017/?authSource=admin
    depends_on:
      - mongo
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
    restart: always
    container_name: sqlserver
    ports:
      - 5533:1433
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=MyPass@word
      - MSSQL_PID=Express
    volumes:
      - sqlserver_data:/var/opt/mssql

volumes:
  zookeeper_data:
    external: true
  kafka_data:
    external: true
  mongodb_data:
    external: true
  sqlserver_data:
    external: true

networks:
  default:
    external:
      name: mydockernetwork
